#pragma checksum "D:\Project-Events\projectevents\projectevents\projectevents\Views\ShowAllBooking\AllBookings.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bcd053a459ca405b628dc0ae681b27e173ff4607"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ShowAllBooking_AllBookings), @"mvc.1.0.view", @"/Views/ShowAllBooking/AllBookings.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ShowAllBooking/AllBookings.cshtml", typeof(AspNetCore.Views_ShowAllBooking_AllBookings))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Project-Events\projectevents\projectevents\projectevents\Views\_ViewImports.cshtml"
using projectevents;

#line default
#line hidden
#line 2 "D:\Project-Events\projectevents\projectevents\projectevents\Views\_ViewImports.cshtml"
using projectevents.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bcd053a459ca405b628dc0ae681b27e173ff4607", @"/Views/ShowAllBooking/AllBookings.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b00d2d6fec79dc449d350a996f52054159e79a8a", @"/Views/_ViewImports.cshtml")]
    public class Views_ShowAllBooking_AllBookings : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\Project-Events\projectevents\projectevents\projectevents\Views\ShowAllBooking\AllBookings.cshtml"
  
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";

#line default
#line hidden
            BeginContext(62, 3561, true);
            WriteLiteral(@"
<div class=""container"">
    <br />
    <div style=""width:90%; margin:0 auto;"">
        <table id=""myTable"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"">
            <thead>
                <tr>
                    <th>BookingID</th>
                    <th>BookingNo</th>
                    <th>BookingDate</th>
                    <th>BookingApproval</th>
                    <th>BookingApprovalDate</th>
                    <th>Print</th>
                    <th>Show Order</th>
                    <th>Cancel Booking</th>
                </tr>
            </thead>
        </table>
    </div>
    <script>
        $(document).ready(function () {
            $(""#myTable"").DataTable({
                ""processing"": true, // for show progress bar
                ""serverSide"": true, // for process server side
                ""filter"": true, // this is for disable filter (search box)
                ""orderMulti"": false, // for disable multiple co");
            WriteLiteral(@"lumn at once
                ""ajax"": {
                    ""url"": ""/ShowAllBooking/LoadAllBookings"",
                    ""type"": ""POST"",
                    ""datatype"": ""json""
                },

                ""columnDefs"":
                [{
                    ""targets"": [0],
                    ""visible"": false,
                    ""searchable"": false
                }
                ],
                ""aoColumnDefs"": [{
                    ""bSortable"": false,
                    ""aTargets"": [4, 5,6,7]
                }],
                ""columns"":
                [
                    { ""data"": ""BookingID"", ""name"": ""BookingID"" },
                    { ""data"": ""BookingNo"", ""name"": ""BookingNo"", ""autoWidth"": true },
                    { ""data"": ""BookingDate"", ""name"": ""BookingDate"", ""autoWidth"": true },
                    { ""data"": ""BookingApproval"", ""name"": ""BookingApproval"" },
                    { ""data"": ""BookingApprovalDate"", ""name"": ""BookingApprovalDate"" },
                ");
            WriteLiteral(@"    {
                        data: null, render: function (data, type, row)
                        {
                            return row.BookingApproval == ""Approved"" ?
                                '<a class=""btn btn-info"" href=""/PrintOrder/Print?BookingNo=' + row.BookingNo + '"">Print Recepit</a>' : row.BookingApproval;
                        }
                    },
                    {
                        data: null, render: function (data, type, row)
                        {
                            return row.BookingApproval == ""Approved"" ?
                                '<a class=""btn btn-info"" href=""/ShowAllBooking/ShowOrder?BookingNo=' + row.BookingNo + '"">Show Order</a>' : row.BookingApproval;
                        }
                    },
                    {
                        data: null, render: function (data, type, row)
        {
                            return row.BookingApproval == ""Approved"" ? ""<a href='#' class='btn btn-danger' onclick=CancelBook");
            WriteLiteral(@"ing('"" + row.BookingID + ""'); >Cancel Booking</a>"": ""-----"";
                        }
                    },
                ]

            });
        });


        function CancelBooking(ID)
        {
            if (confirm(""Are you sure you want to Cancel Booking ...?""))
            {
                Delete(ID);
            }
            else {
                return false;
            }
        }

        function Delete(BookingID)
    {
        var url = '");
            EndContext();
            BeginContext(3624, 17, false);
#line 93 "D:\Project-Events\projectevents\projectevents\projectevents\Views\ShowAllBooking\AllBookings.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
            EndContext();
            BeginContext(3641, 483, true);
            WriteLiteral(@"' + ""ShowAllBooking/CancelBooking"";

        $.post(url, { BookingID: BookingID }, function (data)
                {
                    if (data)
                    {
                        oTable = $('#myTable').DataTable();
                        oTable.draw();
                    }
                    else
                    {
                        alert(""Something Went Wrong!"");
                    }
                });
    }


    </script>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
